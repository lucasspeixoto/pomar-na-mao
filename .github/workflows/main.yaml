name: CI/CD pipeline

on:
  push:
    branches: ['master', 'main']
  pull_request:
    branches: ['master', 'main']

jobs:
  Checkout:
    name: Checkout
    runs-on: ubuntu-latest
    steps:
      - name: 📑 Checkout Code
        uses: actions/checkout@v3

      - name: 📩 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'
  
  Install-Dependencies:
    name: Install-Dependencies
    needs: Checkout
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Install Dependencies
        run: npm install
  
  Linting:
    name: Linting
    needs: Install-Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: 🧹 Lint Code
        run: npm run lint

  Testing:
    name: Testing
    needs: Install-Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: 🧪 Run Tests
        run: npm run test

  Building:
    name: Building
    needs: [Testing, Linting, Install-Dependencies]
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Build Application
        run: npm run build
  
  Push-to-Docker:
    name: Push to Docker
    needs: [Testing, Linting, Install-Dependencies, Building]
    runs-on: ubuntu-latest
    steps:
      - name: 🐋 Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏗️ Build e tag da Imagem
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/pomar-na-mao:${{ github.run_id }} .

      - name: 🐳 Push da Imagem
        run: docker push ${{ secrets.DOCKER_USERNAME }}/pomar-na-mao:${{ github.run_id }}

  Continuous-Deploy:
    name: Continuous Deploy
    runs-on: ubuntu-latest
    needs: [Testing, Linting, Install-Dependencies, Building, Push-to-Docker]
    steps:
      - uses: actions/checkout@v2
      - name: 📂 Install Vercel CLI
        run: npm install --global vercel@latest
      - name: 📩 Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: 🏗️ Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: 🚀 Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}